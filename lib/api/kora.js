const fetch =  require('node-fetch');
const cheerio = require('cheerio');
const moment =  require('moment');

const leagueEmojis = [
  { league: 'الدوري الفرنسي', emoji: '🇫🇷' }, 
  { league: 'الدوري الإنجليزي الممتاز', emoji: '🏴' }
];

const excludedLeagues = [
  'الدوري الليبيري الممتاز',
  'الدوري الصيني سوبر',
  'دوري الرديف السعودي',
  'بطولة باوليستا البرازيل',
  'الدوري القطري نجوم قطر',
  'الدوري الروسي الممتاز',
  'الدوري الليبي الممتاز',
  'الدوري الكوري الجنوبي',
  'كأس إيران حذفي',
  'كأس الرابطة المصرية',
  'كأس الجزائر',
  'كأس البرازيل',
  'الدوري الياباني الممتاز',
  'الدوري المصري الممتاز',
  'الدوري الكويتي الممتاز',
  'الدوري العراقي نجوم',
  'الدوري الإنجليزي للسيدات سوبر',
  'الدوري الإسباني للسيدات',
  'الدوري الإماراتي',
  'الدوري الإسباني الدرجة الثانية',
  'الدوري الإنجليزي الدرجة الثانية',
  'الدوري الجزائري القسم الثاني',
  'الدوري الإيراني للمحترفين',
  'تشامبيونشيب البطولة الإنجليزية',
  'الدوري السعودي للسيدات الممتاز',
  'الدوري السعودي للناشئين تحت 17 سنة',
  'الدوري التونسي الرابطة المحترفة الأولى',
  'الدوري النرويجي الممتاز',
  'الدوري البحريني الممتاز',
  'الدوري الماليزي السوبر',
  'الدوري الأرجنتيني الممتاز',
  'الدوري النمساوي الممتاز',
  'الدوري البولندي الممتاز',
  'الدوري التشيكي الممتاز',
  'الدوري الأوكراني الممتاز',
  'الدوري البرتغالي الدرجة الثانية',
  'الدوري الصربي الممتاز',
  'كأس QSL القطرية Ooredoo',
  'كأس رئيس الدولة الإماراتي',
  'الدوري المجري الممتاز',
  'الدوري التونسي الدرجة الثاني الرابطة المحترفة الثانية',
  'الدوري الكرواتي الممتاز',
  'الدوري الألماني الدرجة الثانية',
  'الدوري الفرنسي الدرجة الثانية',
  'الدوري الإيطالي الدرجة الثاني الدرجة B',
  'الدوري السعودي للشباب تحت 19 سنة',
  'الدوري الأسترالي الدرجة A',
  'الدوري المكسيكي الممتاز',
  'الدوري السويدي الممتاز',
  'الدوري الهولندي',
  'الدوري اليوناني السوبر',
  'الدوري الدنماركي السوبر',
  'الدوري السويسري الممتاز',
  'الدوري الإسكتلندي للمحترفين',
  'الدوري المصري الدرجة الثانية (أ)',
  'الدوري الاسباني - الدرجة الثانية',
  'الدوري الجزائري الدرجة الثانية',
  'دوري المحترفين الإماراتي',
  'الدوري اللبناني الممتاز',
  'مباريات ودية -  أندية',
  'البحرين - كاس الملك',
  'كأس الاتحاد الآسيوي للأندية',
  'بطولة الألعاب الآسيوية - كرة القدم',
  'الدوري البرازيلي',
  'دوري الدرجة 2 السعودي',
  'دوري محمد بن سلمان د. أولى',
  'دوري الشباب السعودي',
  'دوري السعودي يلو',
  'دوري جنوب أفريقيا',
  'دوري أبطال أوروبا للشباب',
  'ليسوتو - دوري ليسوتو الممتاز',
  'دوري الدرجة الأولى الكويتي',
  'دوري الدرجة الثانية التونسي',
  'دوري الدرجة الثانية السعودي',
  'دوري الدرجة الثانية القطري',
  'الدوري البحريني',
  'الدوري اليمني',
  'الدوري الليبي',
  'الدوري السوري الممتاز',
  'دوري نجوم قطر',
  'الدوري الجزائري',
  'كأس خادم الحرمين الشريفين',
  'الدوري الإماراتي للمحترفين',
  'الدوري المصري',
  'الدوري العماني',
  'الدوري الكويتي', 'كأس تركيا',
  'كأس الأردن',
  'وديات أندية (3)',
  'كأس مصر',
  'كأس اليونان',
  'كأس السلطان العماني',
  'الدوري التونسي',
  'كأس رابطة الدوري الارجنتيني',
  'كأس ولي العهد الكويتي',
  'الدوري الأردني للمحترفين',
];

const getLeagueEmoji = (leagueName) => {
  const match = leagueEmojis.find(item => item.league === leagueName);
  return match ? match.emoji : '‏';
};

const kora = async () => {
  const url = 'https://jdwel.com/today/';

  try {
    const response = await fetch(url);
    const html = await response.text();
    const $ = cheerio.load(html);

        const matches = [];

        $('ul.comp_matches_list.matches_list').each((_, element) => {

          const leagueName = $(element).find('.comp_separator.container .main h4').text().trim();

          if (excludedLeagues.includes(leagueName)) return;

          const leagueEmoji = getLeagueEmoji(leagueName);

          // إضافة كائن الدوري قبل إضافة المباريات
          matches.push({
            league: leagueName, 
            emoji: leagueEmoji,
            matches: [] // إضافة مصفوفة فارغة للمباريات
          });

          $(element).find('.single_match').each((_, match) => {
        // Extract match data
        const teamNames = [
          $(match).find('.team.hometeam span.the_team').text().trim(),
          $(match).find('.team.awayteam span.the_team').text().trim()
        ];

        const dateTime = $(match).find('.middle_column.cell.col-2 .match_time .the_otime').text();
        const time = moment(dateTime).subtract(2, 'hours').format('HH:mm');

        const status = $(match).find('.match_status span').text().trim();

        const score = [
          $(match).find('.match_score .hometeam').text(),
          $(match).find('.match_score .awayteam').text()
        ];

        // Add match to list
            matches[matches.length-1].matches.push({
              teamNames,
              time,
              status,
              score
            });
      });
    });
    const json = JSON.stringify(matches);

   return json;

  } catch (error) {
    console.error('Error fetching matches:', error);
    return null;
  }
};
module.exports = kora;
